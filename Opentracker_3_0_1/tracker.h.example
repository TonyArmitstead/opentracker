//OpenTracker config
#define DEBUG 1          //enable debug msg, sent to serial port
#define CR '\r'
#define LF '\n'
#define MAX_PHONE_NUMBER_LEN 16  // Max number of digits in a phone number
#define ALWAYS_ON 1      //set to 1 to make the tracker log even with the ignition off

unsigned long led_interval = 1000; // interval at which to blink status led (milliseconds)

//default settings (can be overwritten and stored in EEPRom)
#define INTERVAL 60000      //how often to collect data (milli sec, 600000 - 10 mins)
#define INTERVAL_SEND 1     //how many times to collect data before sending (times), sending interval interval*interval_send (4 default)
#define SMS_SEND_INTERVAL 24*60*60*1000 //how often (in ms) to send a location SMS message
#define SMS_SEND_NUMBER ""
#define POWERSAVE 0         //enable powersaving (turn off modem, gps on every loop)
#define KEY ""   //key for connection, will be sent with every data transmission
#define DATA_LIMIT 2500     //current data limit, data collected before sending to remote server can not exceed this
// SMS related definitions
#define MAX_SMS_MSG_LEN 144
#define MAX_SMS_KEY_LEN 12  // SMS key cant be longer than this
#define SMS_KEY ""      // default key for SMS command auth
// Macro to help with forming SMS_SEND bit data values
#define SMS_SEND(name, val) \
    ((SMS_SEND_##name##_##val & SMS_SEND_##name##_MASK) << SMS_SEND_##name##_POS)
// Definitions of bit positions and values for settings.sms_send_flags
#define SMS_SEND_LOCATION_POS   0
#define SMS_SEND_LOCATION_MASK  1
#define     SMS_SEND_LOCATION_ON  1
#define     SMS_SEND_LOCATION_OFF 0
#define SMS_SEND_LOCATION_FORMAT_POS 1
#define SMS_SEND_LOCATION_FORMAT_MASK 0x03
#define     SMS_SEND_LOCATION_FORMAT_WEB 0
#define     SMS_SEND_LOCATION_FORMAT_MAP 1
#define     SMS_SEND_LOCATION_FORMAT_VAL 2
#define SMS_SEND_NSAT_POS 3
#define SMS_SEND_NSAT_MASK 1
#define     SMS_SEND_NSAT_ON  1
#define     SMS_SEND_NSAT_OFF 0
#define SMS_SEND_ALT_POS 4
#define SMS_SEND_ALT_MASK 1
#define     SMS_SEND_ALT_ON  1
#define     SMS_SEND_ALT_OFF 0
#define SMS_SEND_SPEED_POS 5
#define SMS_SEND_SPEED_MASK 1
#define     SMS_SEND_SPEED_ON  1
#define     SMS_SEND_SPEED_OFF 0
#define SMS_SEND_IGN_POS 6
#define SMS_SEND_IGN_MASK 1
#define     SMS_SEND_IGN_ON  1
#define     SMS_SEND_IGN_OFF 0
// Default value for settings.sms_send_flags
#define SMS_SEND_DEFAULT \
    SMS_SEND(LOCATION, ON) | \
    SMS_SEND(LOCATION_FORMAT, MAP) | \
    SMS_SEND(NSAT, ON) | \
    SMS_SEND(ALT, ON) | \
    SMS_SEND(SPEED, ON) | \
    SMS_SEND(IGN, ON)

#define GSM_MODEM_COMMAND_TIMEOUT 20
#define GSM_SEND_FAILURES_REBOOT 0  // 0 == disabled, increase to set the number of GSM failures that will trigger a reboot of the opentracker device

#define ENGINE_RUNNING_LOG_FAST_AS_POSSIBLE 0 // when the engine is running, log position as fast as possible

#define SEND_RAW 0 // enable to use the new raw tcp send method to minimise data use
#define SEND_RAW_INCLUDE_KEY 1
#define SEND_RAW_INCLUDE_TIMESTAMP 0

#define DATA_INCLUDE_GPS_DATE 1 // enable to include the GPS date in the POST string
#define DATA_INCLUDE_GPS_TIME 1 // enable to include the GPS time in the POST string
#define DATA_INCLUDE_LATITUDE 1 // enable to include latitude
#define DATA_INCLUDE_LONGITUDE 1 // enable to include longitude
#define DATA_INCLUDE_SPEED 1 // enable to include speed (km/h)
#define DATA_INCLUDE_ALTITUDE 1 // enable to include altitude
#define DATA_INCLUDE_HEADING 1 // enable to include heading
#define DATA_INCLUDE_HDOP 1 // enable to include hdop
#define DATA_INCLUDE_SATELLITES 1 // enable to include satellites
#define DATA_INCLUDE_BATTERY_LEVEL 0  // enable to include the battery level in the POST string
#define DATA_INCLUDE_IGNITION_STATE 0 // enable to include the ignition state in the POST string
#define DATA_INCLUDE_ENGINE_RUNNING_TIME 0 // enable to include the engine running time (in seconds) in the POST string

#define HOSTNAME "updates.geolink.io"
#define PROTO "TCP"
#define HTTP_PORT "80"
#define URL "/index.php"

#define DEFAULT_APN ""  //default APN
#define DEFAULT_USER ""  //default APN user
#define DEFAULT_PASS ""  //default APN pass

const char HTTP_HEADER1[] =
    "POST /index.php  HTTP/1.0\r\nHost: updates.geolink.io\r\nContent-type: application/x-www-form-urlencoded\r\nContent-length:"; //HTTP header line before length
const char HTTP_HEADER2[] =
    "\r\nUser-Agent:OpenTracker3.0\r\nConnection: close\r\n\r\n"; //HTTP header line after length


#define PACKET_SIZE 1400    //TCP data chunk size, modem accept max 1460 bytes per send
#define PACKET_SIZE_DELIVERY 3000    //in case modem has this number of bytes undelivered, wait till sending new data (3000 bytes default, max sending TCP buffer is 7300)

#define CONNECT_RETRY 5    //how many time to retry connecting to remote server

#define STORAGE 0                     //save logs in flash storage
#define STORAGE_CONFIG_PAGE 1         //flash index to store configuration - just after FIRST_RUN page
#define STORAGE_FIRST_RUN_PAGE 0      //flash index to store flag for first run - very first page
#define STORAGE_DATA_START 200        //starting flash index to store logs (200 first bytes reserved for configuration)
#define STORAGE_DATA_END 262142       //the last possible flash index (max 262143, one last byte must be reserved for marker)
//  #define STORAGE_DATA_END 600       //the last possible flash index (max 262143, one last byte must be reserved for marker)

#define STORAGE_INDEX_CHAR 35         //character used as index separator (ascii 35 = #), data must not have this character
#define STORAGE_INDEX_SENT_CHAR 64    //character used as index separator indicating sent logs position (ascii 64 = @), data must not have this character

#define WEBSOCKET 1         //use websockets instead of traditional sending (real time updates and two ways comms) - todo

/**
 * Definition of data collected from each gps update
 */
typedef struct GPSDATA_S {
    float lat;              // latitude
    float lon;              // longitude
    float alt;              // altitude in meters (+/-)
    float course;           // course/direction in degrees
    float speed;            // speed in km/h
    unsigned long time;     // GPS time
    unsigned long date;     // GPS date
    unsigned short nsats;   // number of satellites
} GPSDATA_T;
